### demonstration of oiinstru functions
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from oivis.oiinstru import interferogram
from oivis.oiinstru import waveguide


def test_opd_scan():
    '''test_opd_scan() Computes and plots a scanned interferogram

    '''    
    wavelmin = 1.55e-6
    wavelmax = 1.75e-6
    sigma = np.linspace(1/wavelmax, 1/wavelmin,5)
    nsample = 1024
    scanlength = 20e-6
    zerophase = 0
    #
    interf, sigma, xscan = interferogram.opd_scan(nsample, sigma, scanlength, zerophase) 
    # choisir les couleurs
    cmap = matplotlib.cm.get_cmap('Spectral')
    # construting an array of colors that span the spectral range
    wavelarray = np.abs(1/sigma - wavelmax) / (wavelmax - wavelmin)
    rgba = cmap(wavelarray)
    #
    plt.figure(figsize=(10,8))
    ax = plt.subplot(111)
    for i in np.arange(interf.shape[0]):
        ax.plot(xscan*1e6, interf[i,:], color = rgba[i])
        ax.plot(xscan*1e6, np.sum(interf,axis=0)/np.average(np.sum(interf,axis=0)),'--', color="black")
        ax.set_xlabel("Optical path difference (microns)")
        ax.set_ylabel("Normalised intensity")


def test_dispersed_phase_temporal():
    '''test_dispersed_phase computes dispersed differential phase of an interferogram 
    according to Foresto et al 1995
    '''    
    wavelmin = 1.45e-6
    wavelmax = 1.65e-6
    sigma = np.linspace(1/wavelmax, 1/wavelmin,5)
    sigma0 = np.average(sigma)
    deltaD = 0 # no differential dispersion in coefficients
    deltalength = 0.02 # 2cm of fiber length difference
    length1 = 1 # length of arm
    d2 = 15e-6 # converted 15 ps/nm/km which is s/m/m
    dispersedphase = waveguide.dispersed_phase_foresto(sigma0, sigma, length1, deltalength, d2, deltaD)
    plt.figure(figsize=(10,8))
    ax = plt.subplot(111)
    ax.plot(sigma, dispersedphase)
    ax.set_xlabel("Wavenumber (m**-1)")
    ax.set_ylabel("Phase (radians)")